{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchSeaCreaturesData = createAsyncThunk('data/fetchSeaCreaturesData', async () => {\n  console.log('fetching');\n  const response = await axios.get('https://acnhapi.com/v1/sea');\n  const result = Object.values(response.data);\n  return result;\n});\nexport const dataSlice = createSlice({\n  name: 'data',\n  initialState: {\n    seaCreatures: [],\n    status: 'idle',\n    error: null\n  },\n  extraReducers: {\n    [fetchSeaCreaturesData.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchSeaCreaturesData.fulfilled]: (state, action) => {\n      state.status = 'succeeded'; // Add any fetched posts to the array\n\n      state.seaCreatures = state.seaCreatures.concat(action.payload);\n    },\n    [fetchSeaCreaturesData.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }\n  }\n});\nexport default dataSlice.reducer;","map":{"version":3,"sources":["/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/seaCreaturesData/dataSlice.js"],"names":["createSlice","createAsyncThunk","axios","fetchSeaCreaturesData","console","log","response","get","result","Object","values","data","dataSlice","name","initialState","seaCreatures","status","error","extraReducers","pending","state","action","fulfilled","concat","payload","rejected","message","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAGF,gBAAgB,CAAC,4BAAD,EAA+B,YAAY;AAC5FG,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,4BAAV,CAAvB;AACA,QAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcJ,QAAQ,CAACK,IAAvB,CAAf;AACA,SAAOH,MAAP;AACH,CALoD,CAA9C;AAOP,OAAO,MAAMI,SAAS,GAAGZ,WAAW,CAAC;AACjCa,EAAAA,IAAI,EAAE,MAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,YAAY,EAAE,EADJ;AAEVC,IAAAA,MAAM,EAAE,MAFE;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFmB;AAOjCC,EAAAA,aAAa,EAAE;AACX,KAACf,qBAAqB,CAACgB,OAAvB,GAAiC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClDD,MAAAA,KAAK,CAACJ,MAAN,GAAe,SAAf;AACD,KAHU;AAIX,KAACb,qBAAqB,CAACmB,SAAvB,GAAmC,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACpDD,MAAAA,KAAK,CAACJ,MAAN,GAAe,WAAf,CADoD,CAEpD;;AACAI,MAAAA,KAAK,CAACL,YAAN,GAAqBK,KAAK,CAACL,YAAN,CAAmBQ,MAAnB,CAA0BF,MAAM,CAACG,OAAjC,CAArB;AACD,KARU;AASX,KAACrB,qBAAqB,CAACsB,QAAvB,GAAkC,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACnDD,MAAAA,KAAK,CAACJ,MAAN,GAAe,QAAf;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAAP,CAAaS,OAA3B;AACD;AAZU;AAPkB,CAAD,CAA7B;AAuBP,eAAed,SAAS,CAACe,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchSeaCreaturesData = createAsyncThunk('data/fetchSeaCreaturesData', async () => {\n    console.log('fetching')\n    const response = await axios.get('https://acnhapi.com/v1/sea');\n    const result = Object.values(response.data);\n    return result;\n});\n\nexport const dataSlice = createSlice({\n    name: 'data',\n    initialState: {\n        seaCreatures: [],\n        status: 'idle',\n        error: null\n    },\n    extraReducers: {\n        [fetchSeaCreaturesData.pending]: (state, action) => {\n          state.status = 'loading'\n        },\n        [fetchSeaCreaturesData.fulfilled]: (state, action) => {\n          state.status = 'succeeded'\n          // Add any fetched posts to the array\n          state.seaCreatures = state.seaCreatures.concat(action.payload)\n        },\n        [fetchSeaCreaturesData.rejected]: (state, action) => {\n          state.status = 'failed'\n          state.error = action.error.message\n        }\n      }\n});\n\nexport default dataSlice.reducer;"]},"metadata":{},"sourceType":"module"}