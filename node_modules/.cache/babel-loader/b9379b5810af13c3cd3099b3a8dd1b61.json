{"ast":null,"code":"var _jsxFileName = \"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchFishData } from './app/fishData/dataSlice';\nimport { fetchBugData } from './app/bugData/dataSlice';\nimport { fetchSeaCreaturesData } from './app/seaCreaturesData/dataSlice';\nimport { Header } from './components/Header/Header';\nimport { HomePage } from './HomePage';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const fish = useSelector(state => state.fishData.fish);\n  const fishStatus = useSelector(state => state.fishData.status);\n  const bugs = useSelector(state => state.bugData.bugs);\n  const bugStatus = useSelector(state => state.bugData.status);\n  const seaCreatures = useSelector(state => state.seaCreaturesData.seaCreatures);\n  const seaCreaturesStatus = useSelector(state => state.seaCreaturesData.status);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (fishStatus == 'idle') {\n      dispatch(fetchFishData());\n    }\n\n    if (bugStatus == 'idle') {\n      dispatch(fetchBugData());\n    }\n\n    if (seaCreaturesStatus == 'idle') {\n      dispatch(fetchSeaCreaturesData());\n    }\n  }, [fishStatus, bugStatus, seaCreaturesStatus, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: HomePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uHylbrAXOlS+J97sv9XQmQuI1wE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/App.js"],"names":["React","useEffect","useSelector","useDispatch","fetchFishData","fetchBugData","fetchSeaCreaturesData","Header","HomePage","BrowserRouter","Router","Route","App","fish","state","fishData","fishStatus","status","bugs","bugData","bugStatus","seaCreatures","seaCreaturesData","seaCreaturesStatus","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,QAGO,kBAHP;AAIA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,IAAI,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,IAA3B,CAAxB;AACA,QAAMG,UAAU,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeE,MAAzB,CAA9B;AAEA,QAAMC,IAAI,GAAGhB,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACK,OAAN,CAAcD,IAA1B,CAAxB;AACA,QAAME,SAAS,GAAGlB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACK,OAAN,CAAcF,MAAxB,CAA7B;AAEA,QAAMI,YAAY,GAAGnB,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACQ,gBAAN,CAAuBD,YAAnC,CAAhC;AACA,QAAME,kBAAkB,GAAGrB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACQ,gBAAN,CAAuBL,MAAjC,CAAtC;AAEA,QAAMO,QAAQ,GAAGrB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,UAAU,IAAI,MAAlB,EAA0B;AACxBQ,MAAAA,QAAQ,CAACpB,aAAa,EAAd,CAAR;AACD;;AAED,QAAIgB,SAAS,IAAI,MAAjB,EAAyB;AACvBI,MAAAA,QAAQ,CAACnB,YAAY,EAAb,CAAR;AACD;;AAED,QAAIkB,kBAAkB,IAAI,MAA1B,EAAkC;AAChCC,MAAAA,QAAQ,CAAClB,qBAAqB,EAAtB,CAAR;AACD;AACF,GAZQ,EAYN,CAACU,UAAD,EAAaI,SAAb,EAAwBG,kBAAxB,EAA4CC,QAA5C,CAZM,CAAT;AAcF,sBACE,QAAC,MAAD;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEhB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAlCQI,G;UACQV,W,EACMA,W,EAENA,W,EACKA,W,EAEGA,W,EACMA,W,EAEVC,W;;;KAVZS,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchFishData } from './app/fishData/dataSlice';\nimport { fetchBugData } from './app/bugData/dataSlice';\nimport { fetchSeaCreaturesData } from './app/seaCreaturesData/dataSlice';\nimport { Header } from './components/Header/Header';\nimport { HomePage } from './HomePage';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n    const fish = useSelector((state) => state.fishData.fish);\n    const fishStatus = useSelector(state => state.fishData.status);\n\n    const bugs = useSelector((state) => state.bugData.bugs);\n    const bugStatus = useSelector(state => state.bugData.status);\n\n    const seaCreatures = useSelector((state) => state.seaCreaturesData.seaCreatures);\n    const seaCreaturesStatus = useSelector(state => state.seaCreaturesData.status);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      if (fishStatus == 'idle') {\n        dispatch(fetchFishData());\n      }\n\n      if (bugStatus == 'idle') {\n        dispatch(fetchBugData());\n      }\n\n      if (seaCreaturesStatus == 'idle') {\n        dispatch(fetchSeaCreaturesData());\n      }\n    }, [fishStatus, bugStatus, seaCreaturesStatus, dispatch])\n\n  return (\n    <Router>\n    <div className=\"App\">\n    <Header />\n        <Route exact path=\"/\" component={HomePage} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}