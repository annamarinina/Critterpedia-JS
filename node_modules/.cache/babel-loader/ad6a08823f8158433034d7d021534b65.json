{"ast":null,"code":"var _jsxFileName = \"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterGrid/CritterGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './CritterGrid.css';\nimport { Critter } from '../Critter/Critter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CritterGrid = props => {\n  _s();\n\n  const month = useSelector(state => state.month.month);\n  const hour = useSelector(state => state.hour.hour);\n  const fish = useSelector(state => state.fishData.fish);\n\n  const filterData = data => {\n    console.log('data: ', data);\n    console.log('month: ', month);\n    console.log('hour: ', hour);\n    data = data.filter(f => f.availability[\"month-array-northern\"].includes(Number(month)));\n    data = data.filter(f => f.availability[\"time-array\"].includes(Number(hour)));\n    console.log('filtered data: ', data);\n    console.log('fish: ', fish);\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: filterData(props.data).map(critter => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(Critter, {\n        label: critter.name[\"name-USen\"],\n        imgUri: critter[\"image_uri\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 52\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CritterGrid, \"Gv2cy1H+qz6uRzUuuYg8XnZQYLQ=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = CritterGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"CritterGrid\");","map":{"version":3,"sources":["/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterGrid/CritterGrid.jsx"],"names":["React","useEffect","useSelector","Critter","CritterGrid","props","month","state","hour","fish","fishData","filterData","data","console","log","filter","f","availability","includes","Number","map","critter","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,mBAAP;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAElC,QAAMC,KAAK,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYA,KAAxB,CAAzB;AACA,QAAME,IAAI,GAAGN,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAAxB;AACA,QAAMC,IAAI,GAAGP,WAAW,CAAEK,KAAD,IAAYA,KAAK,CAACG,QAAN,CAAeD,IAA5B,CAAxB;;AAEA,QAAME,UAAU,GAAIC,IAAD,IAAU;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAa,QAAb,EAAuBF,IAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,KAAvB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,IAAtB;AACAI,IAAAA,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,YAAF,CAAe,sBAAf,EAAuCC,QAAvC,CAAgDC,MAAM,CAACb,KAAD,CAAtD,CAAjB,CAAP;AACAM,IAAAA,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,YAAF,CAAe,YAAf,EAA6BC,QAA7B,CAAsCC,MAAM,CAACX,IAAD,CAA5C,CAAjB,CAAP;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,IAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,IAAtB;AACA,WAAOG,IAAP;AACH,GATD;;AAWA,sBACI;AAAA,cACKD,UAAU,CAACN,KAAK,CAACO,IAAP,CAAV,CAAuBQ,GAAvB,CAA2BC,OAAO,iBAAI;AAAA,6BAAI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEA,OAAO,CAACC,IAAR,CAAa,WAAb,CAAhB;AAA2C,QAAA,MAAM,EAAID,OAAO,CAAC,WAAD;AAA5D;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAtC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtBM;;GAAMjB,W;UAEKF,W,EACDA,W,EACAA,W;;;KAJJE,W","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './CritterGrid.css';\nimport { Critter } from '../Critter/Critter';\n\nexport const CritterGrid = (props) => {\n\n    const month = useSelector((state) => state.month.month);\n    const hour = useSelector((state) => state.hour.hour);\n    const fish = useSelector((state) =>  state.fishData.fish);\n\n    const filterData = (data) => {\n        console.log( 'data: ', data);\n        console.log('month: ', month);\n        console.log('hour: ', hour);\n        data = data.filter(f => f.availability[\"month-array-northern\"].includes(Number(month)));\n        data = data.filter(f => f.availability[\"time-array\"].includes(Number(hour)));\n        console.log('filtered data: ', data);\n        console.log('fish: ', fish)\n        return data;\n    }\n\n    return(\n        <table>\n            {filterData(props.data).map(critter => <tr><Critter label={critter.name[\"name-USen\"]} imgUri = {critter[\"image_uri\"]} /></tr>)}\n        </table>\n    )\n}"]},"metadata":{},"sourceType":"module"}