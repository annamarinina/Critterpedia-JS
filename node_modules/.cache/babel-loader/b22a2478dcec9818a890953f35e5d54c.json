{"ast":null,"code":"var _jsxFileName = \"/Users/annamarinina/Desktop/Critterpedia-JS/src/pages/HomePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../components/Button/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst typesOfCritters = ['Fish', 'Sea Creatures', 'Bugs'];\nexport const HomePage = () => {\n  _s();\n\n  const [fishData, setFishData] = useState({\n    fish: []\n  });\n  const [bugData, setBugData] = useState({\n    bugs: []\n  });\n  const [seaCreatureData, setSeaCreatureData] = useState({\n    seaCreatures: []\n  });\n  useEffect(async () => {\n    /* const fishData = await axios(\n         'https://acnhapi.com/v1/fish',\n     );\n     const bugData = await axios(\n         'https://acnhapi.com/v1/bugs',\n     );\n      setFish(fishData.data); */\n    const fishURL = 'https://acnhapi.com/v1/fish';\n    const bugURL = 'https://acnhapi.com/v1/bugs';\n    const seaURL = 'https://acnhapi.com/v1/sea';\n    const fishReq = axios.get(fishURL);\n    const bugReq = axios.get(bugURL);\n    const seaReq = axios.get(seaURL);\n    axios.all([fishReq, bugReq, seaReq]).then(axios.spread((...responses) => {\n      const fishRes = responses[0];\n      const bugRes = responses[1];\n      const seaRes = responses[2];\n      setFishData(fishRes.data);\n      setBugData(bugRes.data);\n      setSeaCreatureData(seaRes.data);\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to Critterpedia!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), console.log(fishData), typesOfCritters.map((critter, index) => /*#__PURE__*/_jsxDEV(Button, {\n      label: critter,\n      path: '/' + critter\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"gM0HeH+B++IIHur91Q/4HQY42lY=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/annamarinina/Desktop/Critterpedia-JS/src/pages/HomePage.jsx"],"names":["React","useState","useEffect","Button","axios","typesOfCritters","HomePage","fishData","setFishData","fish","bugData","setBugData","bugs","seaCreatureData","setSeaCreatureData","seaCreatures","fishURL","bugURL","seaURL","fishReq","get","bugReq","seaReq","all","then","spread","responses","fishRes","bugRes","seaRes","data","console","log","map","critter","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,CAAC,MAAD,EAAS,eAAT,EAA0B,MAA1B,CAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC;AAAEW,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAtC;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC;AAAEc,IAAAA,YAAY,EAAE;AAAhB,GAAD,CAAtD;AAEAb,EAAAA,SAAS,CAAC,YAAW;AAClB;AACP;AACA;AACA;AACA;AACA;AACA;AAEQ,UAAMc,OAAO,GAAG,6BAAhB;AACA,UAAMC,MAAM,GAAG,6BAAf;AACA,UAAMC,MAAM,GAAG,4BAAf;AAEA,UAAMC,OAAO,GAAGf,KAAK,CAACgB,GAAN,CAAUJ,OAAV,CAAhB;AACA,UAAMK,MAAM,GAAGjB,KAAK,CAACgB,GAAN,CAAUH,MAAV,CAAf;AACA,UAAMK,MAAM,GAAGlB,KAAK,CAACgB,GAAN,CAAUF,MAAV,CAAf;AAEAd,IAAAA,KAAK,CAACmB,GAAN,CAAU,CAACJ,OAAD,EAAUE,MAAV,EAAkBC,MAAlB,CAAV,EAAqCE,IAArC,CAA0CpB,KAAK,CAACqB,MAAN,CAAa,CAAC,GAAGC,SAAJ,KAAkB;AACrE,YAAMC,OAAO,GAAGD,SAAS,CAAC,CAAD,CAAzB;AACA,YAAME,MAAM,GAAGF,SAAS,CAAC,CAAD,CAAxB;AACA,YAAMG,MAAM,GAAGH,SAAS,CAAC,CAAD,CAAxB;AAEAlB,MAAAA,WAAW,CAACmB,OAAO,CAACG,IAAT,CAAX;AACAnB,MAAAA,UAAU,CAACiB,MAAM,CAACE,IAAR,CAAV;AACAhB,MAAAA,kBAAkB,CAACe,MAAM,CAACC,IAAR,CAAlB;AACH,KARyC,CAA1C;AASH,GA1BQ,CAAT;AA4BA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,OAAO,CAACC,GAAR,CAAYzB,QAAZ,CAFL,EAGKF,eAAe,CAAC4B,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,kBACjB,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAED,OAAf;AAAoC,MAAA,IAAI,EAAE,MAAMA;AAAhD,OAA6BC,KAA7B;AAAA;AAAA;AAAA;AAAA,YADH,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA1CM;;GAAM7B,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from '../components/Button/Button';\nimport axios from 'axios';\n\nconst typesOfCritters = ['Fish', 'Sea Creatures', 'Bugs'];\n\nexport const HomePage = () => {\n    const [fishData, setFishData] = useState({ fish: [] });\n    const [bugData, setBugData] = useState({ bugs: [] });\n    const [seaCreatureData, setSeaCreatureData] = useState({ seaCreatures: [] });\n\n    useEffect(async() => {\n       /* const fishData = await axios(\n            'https://acnhapi.com/v1/fish',\n        );\n        const bugData = await axios(\n            'https://acnhapi.com/v1/bugs',\n        );\n\n        setFish(fishData.data); */\n        const fishURL = 'https://acnhapi.com/v1/fish';\n        const bugURL = 'https://acnhapi.com/v1/bugs';\n        const seaURL = 'https://acnhapi.com/v1/sea';\n\n        const fishReq = axios.get(fishURL);\n        const bugReq = axios.get(bugURL);\n        const seaReq = axios.get(seaURL);\n\n        axios.all([fishReq, bugReq, seaReq]).then(axios.spread((...responses) => {\n            const fishRes = responses[0];\n            const bugRes = responses[1];\n            const seaRes = responses[2];\n\n            setFishData(fishRes.data);\n            setBugData(bugRes.data);\n            setSeaCreatureData(seaRes.data);\n        }));\n    });\n\n    return (\n        <div>\n            <p>Welcome to Critterpedia!</p>\n            {console.log(fishData)}\n            {typesOfCritters.map((critter, index) => \n                <Button label={critter} key={index} path={'/' + critter}></Button>\n            )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}