{"ast":null,"code":"var _jsxFileName = \"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/SelectMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setMonth } from '../app/filters/monthSlice';\nimport { setHour } from '../app/filters/hourSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectMenu = props => {\n  _s();\n\n  const [value, setValue] = useState(props.defaultValue);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    console.log('selected', e.target.value); // setValue(e.target.value);\n\n    console.log(props.onSelect);\n    dispatch(props.onSelect(e.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"select\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"select\",\n      onChange: onChange,\n      children: props.options.map(({\n        label,\n        value\n      }) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: value,\n        selected: props.defaultVal == value ? true : false,\n        children: label\n      }, value + '_' + label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 50\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SelectMenu, \"ZhruOG+yQAmnVpofJClNj8bLJVI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SelectMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectMenu\");","map":{"version":3,"sources":["/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/SelectMenu.jsx"],"names":["React","useState","useSelector","useDispatch","setMonth","setHour","SelectMenu","props","value","setValue","defaultValue","dispatch","onChange","e","console","log","target","onSelect","label","options","map","defaultVal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACM,KAAK,CAACG,YAAP,CAAlC;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,QAAQ,GAAGC,CAAC,IAAI;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,CAAC,CAACG,MAAF,CAASR,KAAjC,EADkB,CAEnB;;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACU,QAAlB;AACAN,IAAAA,QAAQ,CAACJ,KAAK,CAACU,QAAN,CAAeJ,CAAC,CAACG,MAAF,CAASR,KAAxB,CAAD,CAAR;AACA,GALH;;AAOA,sBACE;AAAA,4BACE;AAAO,MAAA,GAAG,EAAC,QAAX;AAAA,gBAAqBD,KAAK,CAACW;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,QAAQ,EAAEN,QAA9B;AAAA,gBACGL,KAAK,CAACY,OAAN,CAAcC,GAAd,CAAkB,CAAC;AAACF,QAAAA,KAAD;AAAQV,QAAAA;AAAR,OAAD,kBAAoB;AAAQ,QAAA,KAAK,EAAEA,KAAf;AAAgD,QAAA,QAAQ,EAAED,KAAK,CAACc,UAAN,IAAoBb,KAApB,GAA4B,IAA5B,GAAiC,KAA3F;AAAA,kBAAmGU;AAAnG,SAA2BV,KAAK,GAAG,GAAR,GAAcU,KAAzC;AAAA;AAAA;AAAA;AAAA,cAAtC;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASH,CApBM;;GAAMZ,U;UAEQH,W;;;KAFRG,U","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setMonth } from '../app/filters/monthSlice';\nimport { setHour } from '../app/filters/hourSlice';\n\nexport const SelectMenu = (props) => {\n    const [value, setValue] = useState(props.defaultValue);\n    const dispatch = useDispatch();\n\n    const onChange = e => {\n        console.log('selected', e.target.value);\n       // setValue(e.target.value);\n       console.log(props.onSelect);\n       dispatch(props.onSelect(e.target.value))\n      };\n\n    return (\n      <div>\n        <label for=\"select\">{props.label}</label>\n        <select id=\"select\" onChange={onChange}>\n          {props.options.map(({label, value}) => <option value={value} key={value + '_' + label} selected={props.defaultVal == value ? true:false}>{label}</option>)}\n        </select>\n      </div>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}