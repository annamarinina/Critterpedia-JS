{"ast":null,"code":"var _jsxFileName = \"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterGrid/CritterGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './CritterGrid.css';\nimport { Critter } from '../Critter/Critter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CritterGrid = props => {\n  _s();\n\n  const month = useSelector(state => state.month.month);\n  const hour = useSelector(state => state.hour.hour);\n  const fish = useSelector(state => state.fishData.fish);\n  useEffect(() => {\n    console.log('data coming in: ', props.data);\n  });\n\n  const filterData = data => {\n    data = data.filter(f => f.availability[\"month-array-northern\"].includes(month));\n    data = data.filter(f => f.availability[\"time-array\"].includes(hour));\n    console.log('filtered data: ', data);\n    console.log('fish: ', fish);\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: filterData(props.data).map(critter => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(Critter, {\n        label: critter.name[\"name-USen\"],\n        imgUri: critter[\"image_uri\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 52\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CritterGrid, \"cTG5KiHGYeksTHFz28EKQeYHuss=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = CritterGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"CritterGrid\");","map":{"version":3,"sources":["/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterGrid/CritterGrid.jsx"],"names":["React","useEffect","useSelector","Critter","CritterGrid","props","month","state","hour","fish","fishData","console","log","data","filterData","filter","f","availability","includes","map","critter","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,mBAAP;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAElC,QAAMC,KAAK,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYA,KAAxB,CAAzB;AACA,QAAME,IAAI,GAAGN,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAAxB;AACA,QAAMC,IAAI,GAAGP,WAAW,CAAEK,KAAD,IAAYA,KAAK,CAACG,QAAN,CAAeD,IAA5B,CAAxB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCP,KAAK,CAACQ,IAAtC;AACH,GAFQ,CAAT;;AAIA,QAAMC,UAAU,GAAID,IAAD,IAAU;AACzBA,IAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,YAAF,CAAe,sBAAf,EAAuCC,QAAvC,CAAgDZ,KAAhD,CAAjB,CAAP;AACAO,IAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,YAAF,CAAe,YAAf,EAA6BC,QAA7B,CAAsCV,IAAtC,CAAjB,CAAP;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAA/B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;AACA,WAAOI,IAAP;AACH,GAND;;AAQA,sBACI;AAAA,cACKC,UAAU,CAACT,KAAK,CAACQ,IAAP,CAAV,CAAuBM,GAAvB,CAA2BC,OAAO,iBAAI;AAAA,6BAAI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEA,OAAO,CAACC,IAAR,CAAa,WAAb,CAAhB;AAA2C,QAAA,MAAM,EAAID,OAAO,CAAC,WAAD;AAA5D;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAtC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBM;;GAAMhB,W;UAEKF,W,EACDA,W,EACAA,W;;;KAJJE,W","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './CritterGrid.css';\nimport { Critter } from '../Critter/Critter';\n\nexport const CritterGrid = (props) => {\n\n    const month = useSelector((state) => state.month.month);\n    const hour = useSelector((state) => state.hour.hour);\n    const fish = useSelector((state) =>  state.fishData.fish);\n\n    useEffect(() => {\n        console.log('data coming in: ', props.data);\n    });\n\n    const filterData = (data) => {\n        data = data.filter(f => f.availability[\"month-array-northern\"].includes(month));\n        data = data.filter(f => f.availability[\"time-array\"].includes(hour));\n        console.log('filtered data: ', data);\n        console.log('fish: ', fish)\n        return data;\n    }\n\n    return(\n        <table>\n            {filterData(props.data).map(critter => <tr><Critter label={critter.name[\"name-USen\"]} imgUri = {critter[\"image_uri\"]} /></tr>)}\n        </table>\n    )\n}"]},"metadata":{},"sourceType":"module"}