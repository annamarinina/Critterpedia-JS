[{"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/index.js":"1","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/reportWebVitals.js":"2","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/App.js":"3","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/store.js":"4","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/fishData/dataSlice.js":"5","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/seaCreaturesData/dataSlice.js":"6","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/bugData/dataSlice.js":"7","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hourSlice.js":"8","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/monthSlice.js":"9","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hemisphereSlice.js":"10","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Header/Header.jsx":"11","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/RadioGroup.jsx":"12","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/SelectMenu.jsx":"13","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterGrid/CritterGrid.jsx":"14","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Critter/Critter.jsx":"15","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterLabel/CritterLabel.jsx":"16","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/NavButton/NavButton.jsx":"17","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/SeaCreaturePage.jsx":"18","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BasePage.jsx":"19","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BugPage.jsx":"20","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/FishPage.jsx":"21"},{"size":620,"mtime":1619800983196,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1618353192831,"results":"24","hashOfConfig":"23"},{"size":1855,"mtime":1640107750061,"results":"25","hashOfConfig":"23"},{"size":640,"mtime":1619882818217,"results":"26","hashOfConfig":"23"},{"size":1012,"mtime":1640011713421,"results":"27","hashOfConfig":"23"},{"size":1075,"mtime":1620079593628,"results":"28","hashOfConfig":"23"},{"size":1007,"mtime":1620079582675,"results":"29","hashOfConfig":"23"},{"size":388,"mtime":1640018934779,"results":"30","hashOfConfig":"23"},{"size":401,"mtime":1640018327094,"results":"31","hashOfConfig":"23"},{"size":402,"mtime":1619882671804,"results":"32","hashOfConfig":"23"},{"size":406,"mtime":1618596683087,"results":"33","hashOfConfig":"23"},{"size":553,"mtime":1640021386570,"results":"34","hashOfConfig":"23"},{"size":613,"mtime":1640021902637,"results":"35","hashOfConfig":"23"},{"size":608,"mtime":1640106252009,"results":"36","hashOfConfig":"23"},{"size":271,"mtime":1640099176671,"results":"37","hashOfConfig":"23"},{"size":220,"mtime":1640098639369,"results":"38","hashOfConfig":"23"},{"size":330,"mtime":1640108996441,"results":"39","hashOfConfig":"23"},{"size":751,"mtime":1640108921376,"results":"40","hashOfConfig":"23"},{"size":3334,"mtime":1640108883803,"results":"41","hashOfConfig":"23"},{"size":703,"mtime":1640108911975,"results":"42","hashOfConfig":"23"},{"size":705,"mtime":1640108900867,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1wdh0sb",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/index.js",[],["91","92"],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/reportWebVitals.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/App.js",["93","94","95","96","97","98"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchFishData } from './app/fishData/dataSlice';\nimport { fetchBugData } from './app/bugData/dataSlice';\nimport { fetchSeaCreaturesData } from './app/seaCreaturesData/dataSlice';\nimport { Header } from './components/Header/Header';\nimport { FishPage } from './pages/FishPage';\nimport { BugPage } from './pages/BugPage';\nimport { SeaCreaturePage } from './pages/SeaCreaturePage';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n    const fish = useSelector((state) => state.fishData.fish);\n    const fishStatus = useSelector(state => state.fishData.status);\n\n    const bugs = useSelector((state) => state.bugData.bugs);\n    const bugStatus = useSelector(state => state.bugData.status);\n\n    const seaCreatures = useSelector((state) => state.seaCreaturesData.seaCreatures);\n    const seaCreaturesStatus = useSelector(state => state.seaCreaturesData.status);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      if (fishStatus == 'idle') {\n        dispatch(fetchFishData());\n      }\n\n      if (bugStatus == 'idle') {\n        dispatch(fetchBugData());\n      }\n\n      if (seaCreaturesStatus == 'idle') {\n        dispatch(fetchSeaCreaturesData());\n      }\n    }, [fishStatus, bugStatus, seaCreaturesStatus, dispatch])\n\n  return (\n    <Router>\n    <div className=\"App\">\n    <Header />\n        <Route \n          exact \n          path=\"/\" \n          render={() => {\n            return ( <Redirect to=\"/fish\" />\n            )}} />\n        <Route exact path=\"/fish\" component={FishPage} />\n        <Route exact path=\"/bugs\" component={BugPage} />\n        <Route exact path=\"/seacreatures\" component={SeaCreaturePage} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/store.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/fishData/dataSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/seaCreaturesData/dataSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/bugData/dataSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hourSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/monthSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hemisphereSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Header/Header.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/RadioGroup.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/SelectMenu.jsx",["99"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport const SelectMenu = (props) => {\n    const dispatch = useDispatch();\n\n    const onChange = e => {\n        console.log('selected', e.target.value);\n        dispatch(props.onSelect(e.target.value))\n      };\n\n    return (\n      <div>\n        <label for=\"select\">{props.label}</label>\n        <select id=\"select\" onChange={onChange}>\n          {props.options.map(({label, value}) => <option value={value} key={value + '_' + label} selected={props.defaultVal == value ? true:false}>{label}</option>)}\n        </select>\n      </div>\n    );\n\n}","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterGrid/CritterGrid.jsx",["100"],"import React, { useEffect } from 'react';\nimport './CritterGrid.css';\nimport { Critter } from '../Critter/Critter';\n\nexport const CritterGrid = (props) => {\n\n    const filterData = (data) => {\n        data = data.filter(f => f.availability[\"month-array-northern\"].includes(Number(props.month)));\n        data = data.filter(f => f.availability[\"time-array\"].includes(Number(props.hour)));\n        return data;\n    }\n\n    return(\n        <table>\n            {filterData(props.data).map(critter => <tr><Critter label={critter.name[\"name-USen\"]} iconUri = {critter[\"icon_uri\"]} /></tr>)}\n        </table>\n    )\n}","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Critter/Critter.jsx",["101"],"import React from 'react';\nimport { CritterLabel } from '../CritterLabel/CritterLabel';\nimport './Critter.css'\n\nexport const Critter = (props) => {\n    return (\n        <div className=\"critter\">\n            <img src={props.iconUri} alt=\"img\"></img>\n        </div>\n    )\n}","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterLabel/CritterLabel.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/NavButton/NavButton.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/SeaCreaturePage.jsx",["102","103"],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BasePage.jsx",["104","105","106","107"],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BugPage.jsx",["108","109"],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/FishPage.jsx",["110","111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":18,"column":11,"nodeType":"118","messageId":"119","endLine":18,"endColumn":15},{"ruleId":"116","severity":1,"message":"120","line":21,"column":11,"nodeType":"118","messageId":"119","endLine":21,"endColumn":15},{"ruleId":"116","severity":1,"message":"121","line":24,"column":11,"nodeType":"118","messageId":"119","endLine":24,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":30,"column":22,"nodeType":"124","messageId":"125","endLine":30,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":34,"column":21,"nodeType":"124","messageId":"125","endLine":34,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":38,"column":30,"nodeType":"124","messageId":"125","endLine":38,"endColumn":32},{"ruleId":"122","severity":1,"message":"123","line":16,"column":125,"nodeType":"124","messageId":"125","endLine":16,"endColumn":127},{"ruleId":"116","severity":1,"message":"126","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"127","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":22},{"ruleId":"116","severity":1,"message":"128","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"129","line":8,"column":11,"nodeType":"118","messageId":"119","endLine":8,"endColumn":21},{"ruleId":"116","severity":1,"message":"130","line":11,"column":24,"nodeType":"118","messageId":"119","endLine":11,"endColumn":37},{"ruleId":"122","severity":1,"message":"123","line":78,"column":71,"nodeType":"124","messageId":"125","endLine":78,"endColumn":73},{"ruleId":"122","severity":1,"message":"123","line":79,"column":71,"nodeType":"124","messageId":"125","endLine":79,"endColumn":73},{"ruleId":"122","severity":1,"message":"123","line":80,"column":88,"nodeType":"124","messageId":"125","endLine":80,"endColumn":90},{"ruleId":"116","severity":1,"message":"128","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"129","line":8,"column":11,"nodeType":"118","messageId":"119","endLine":8,"endColumn":21},{"ruleId":"116","severity":1,"message":"128","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"129","line":8,"column":11,"nodeType":"118","messageId":"119","endLine":8,"endColumn":21},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'fish' is assigned a value but never used.","Identifier","unusedVar","'bugs' is assigned a value but never used.","'seaCreatures' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'CritterLabel' is defined but never used.","'useState' is defined but never used.","'hemisphere' is assigned a value but never used.","'setHemisphere' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]