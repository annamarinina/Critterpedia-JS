[{"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/index.js":"1","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/reportWebVitals.js":"2","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/App.js":"3","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/store.js":"4","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/fishData/dataSlice.js":"5","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/seaCreaturesData/dataSlice.js":"6","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/bugData/dataSlice.js":"7","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hourSlice.js":"8","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/monthSlice.js":"9","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hemisphereSlice.js":"10","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Header/Header.jsx":"11","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/RadioGroup.jsx":"12","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterGrid/CritterGrid.jsx":"13","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Critter/Critter.jsx":"14","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/NavButton/NavButton.jsx":"15","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/SeaCreaturePage.jsx":"16","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BasePage.jsx":"17","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BugPage.jsx":"18","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/FishPage.jsx":"19","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/SelectMenu/SelectMenu.jsx":"20","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/languageSlice.js":"21"},{"size":620,"mtime":1640191937719,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1618353192831,"results":"24","hashOfConfig":"23"},{"size":1855,"mtime":1640107750061,"results":"25","hashOfConfig":"23"},{"size":730,"mtime":1640189359035,"results":"26","hashOfConfig":"23"},{"size":1012,"mtime":1640011713421,"results":"27","hashOfConfig":"23"},{"size":1075,"mtime":1620079593628,"results":"28","hashOfConfig":"23"},{"size":1007,"mtime":1620079582675,"results":"29","hashOfConfig":"23"},{"size":388,"mtime":1640018934779,"results":"30","hashOfConfig":"23"},{"size":401,"mtime":1640018327094,"results":"31","hashOfConfig":"23"},{"size":402,"mtime":1619882671804,"results":"32","hashOfConfig":"23"},{"size":204,"mtime":1640115844075,"results":"33","hashOfConfig":"23"},{"size":682,"mtime":1640109427394,"results":"34","hashOfConfig":"23"},{"size":1232,"mtime":1640277637148,"results":"35","hashOfConfig":"23"},{"size":318,"mtime":1640277381522,"results":"36","hashOfConfig":"23"},{"size":330,"mtime":1640108996441,"results":"37","hashOfConfig":"23"},{"size":976,"mtime":1640277564398,"results":"38","hashOfConfig":"23"},{"size":4408,"mtime":1640189706425,"results":"39","hashOfConfig":"23"},{"size":929,"mtime":1640277548270,"results":"40","hashOfConfig":"23"},{"size":931,"mtime":1640277526481,"results":"41","hashOfConfig":"23"},{"size":685,"mtime":1640116474417,"results":"42","hashOfConfig":"23"},{"size":387,"mtime":1640189488042,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1wdh0sb",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/index.js",[],["90","91"],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/reportWebVitals.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/App.js",["92","93","94","95","96","97"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchFishData } from './app/fishData/dataSlice';\nimport { fetchBugData } from './app/bugData/dataSlice';\nimport { fetchSeaCreaturesData } from './app/seaCreaturesData/dataSlice';\nimport { Header } from './components/Header/Header';\nimport { FishPage } from './pages/FishPage';\nimport { BugPage } from './pages/BugPage';\nimport { SeaCreaturePage } from './pages/SeaCreaturePage';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n    const fish = useSelector((state) => state.fishData.fish);\n    const fishStatus = useSelector(state => state.fishData.status);\n\n    const bugs = useSelector((state) => state.bugData.bugs);\n    const bugStatus = useSelector(state => state.bugData.status);\n\n    const seaCreatures = useSelector((state) => state.seaCreaturesData.seaCreatures);\n    const seaCreaturesStatus = useSelector(state => state.seaCreaturesData.status);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      if (fishStatus == 'idle') {\n        dispatch(fetchFishData());\n      }\n\n      if (bugStatus == 'idle') {\n        dispatch(fetchBugData());\n      }\n\n      if (seaCreaturesStatus == 'idle') {\n        dispatch(fetchSeaCreaturesData());\n      }\n    }, [fishStatus, bugStatus, seaCreaturesStatus, dispatch])\n\n  return (\n    <Router>\n    <div className=\"App\">\n    <Header />\n        <Route \n          exact \n          path=\"/\" \n          render={() => {\n            return ( <Redirect to=\"/fish\" />\n            )}} />\n        <Route exact path=\"/fish\" component={FishPage} />\n        <Route exact path=\"/bugs\" component={BugPage} />\n        <Route exact path=\"/seacreatures\" component={SeaCreaturePage} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/store.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/fishData/dataSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/seaCreaturesData/dataSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/bugData/dataSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hourSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/monthSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hemisphereSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Header/Header.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/RadioGroup.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterGrid/CritterGrid.jsx",["98","99","100"],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Critter/Critter.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/NavButton/NavButton.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/SeaCreaturePage.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BasePage.jsx",["101","102","103"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RadioGroup } from '../components/RadioGroup';\nimport { SelectMenu } from '../components/SelectMenu/SelectMenu';\nimport { setMonth } from '../app/filters/monthSlice';\nimport { setHour } from '../app/filters/hourSlice';\nimport { setHemisphere } from '../app/filters/hemisphereSlice';\nimport { setLanguage } from '../app/filters/languageSlice';\nimport { NavButton } from '../components/NavButton/NavButton';\n\nexport const BasePage = (props) => {\n    const language = useSelector((state) => state.language.language);\n    const hemisphere = useSelector((state) => state.hemisphere.hemisphere);\n    const month = useSelector((state) => state.month.month);\n    const hour = useSelector((state) => state.hour.hour);\n\n    return (\n        <div>\n            <SelectMenu options={[\n                {label: 'English (US)', value: 'name-USen'},\n                {label: 'English (EU)', value: 'name-EUen'},\n                {label: 'German (EU)', value: 'name-EUde'},\n                {label: 'Spanish (EU)', value: 'name-EUes'},\n                {label: 'Spanish (US)', value: 'name-USes'},\n                {label: 'French (EU)', value: 'name-EUfr'},\n                {label: 'French (US)', value: 'name-USfr'},\n                {label: 'Italian', value: 'name-EUit'},\n                {label: 'Dutch', value: 'name-EUnl'},\n                {label: 'Simplified Chinese', value: 'name-CNzh'},\n                {label: 'Traditional Chinese', value: 'name-TWzh'},\n                {label: 'Japanese', value: 'name-JPja'},\n                {label: 'Korean', value: 'name-KRko'},\n                {label: 'Russian', value: 'name-EUru'},\n            ]}\n            defaultVal={language}\n            onSelect={setLanguage}\n            label={\"Please select the language you'd like critters' names displayed in\"} />\n\n            <p>Please select your hemisphere:</p>\n            <RadioGroup buttons={[\n                {label: 'Northern', value: 'Northern'}, \n                {label: 'Southern', value: 'Southern'}]} \n                defaultVal={hemisphere}\n                onSelect={setHemisphere} />\n            \n            <SelectMenu options={[\n                {label: 'January', value: 1},\n                {label: 'February', value: 2},\n                {label: 'March', value: 3},\n                {label: 'April', value: 4},\n                {label: 'May', value: 5},\n                {label: 'June', value: 6},\n                {label: 'July', value: 7},\n                {label: 'August', value: 8},\n                {label: 'September', value: 9},\n                {label: 'October', value: 10},\n                {label: 'November', value: 11},\n                {label: 'December', value: 12}\n            ]}\n            defaultVal={month}\n            onSelect={setMonth}\n            label={\"Please select month of interest\"} />\n\n            <SelectMenu options={[\n                {label: '0', value: 0},\n                {label: '1', value: 1},\n                {label: '2', value: 2},\n                {label: '3', value: 3},\n                {label: '4', value: 4},\n                {label: '5', value: 5},\n                {label: '6', value: 6},\n                {label: '7', value: 7},\n                {label: '8', value: 8},\n                {label: '9', value: 9},\n                {label: '10', value: 10},\n                {label: '11', value: 11},\n                {label: '12', value: 12},\n                {label: '13', value: 13},\n                {label: '14', value: 14},\n                {label: '15', value: 15},\n                {label: '16', value: 16},\n                {label: '17', value: 17},\n                {label: '18', value: 18},\n                {label: '19', value: 19},\n                {label: '20', value: 20},\n                {label: '21', value: 21},\n                {label: '22', value: 22},\n                {label: '23', value: 23},\n                {label: '24', value: 24}\n            ]}\n            defaultVal={hour}\n            onSelect={setHour}\n            label={\"Please select hour of interest\"} />\n\n            <NavButton label=\"Fish\" path=\"/fish\" selected={props.page == 'fish' ? true : false} />\n            <NavButton label=\"Bugs\" path=\"/bugs\" selected={props.page == 'bugs' ? true : false} />\n            <NavButton label=\"Sea Creatures\" path=\"/seacreatures\" selected={props.page == 'sea' ? true : false} />\n        </div>\n    )\n}","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BugPage.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/FishPage.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/SelectMenu/SelectMenu.jsx",["104"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport './SelectMenu.css';\n\nexport const SelectMenu = (props) => {\n    const dispatch = useDispatch();\n\n    const onChange = e => {\n        console.log('selected', e.target.value);\n        dispatch(props.onSelect(e.target.value));\n      };\n\n    return (\n      <div className=\"selectMenu\">\n        <label for=\"select\">{props.label}</label>\n        <select className=\"dropDown\" id=\"select\" onChange={onChange}>\n          {props.options.map(({label, value}) => <option value={value} key={value + '_' + label} selected={props.defaultVal == value ? true:false}>{label}</option>)}\n        </select>\n      </div>\n    );\n\n}","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/languageSlice.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":18,"column":11,"nodeType":"111","messageId":"112","endLine":18,"endColumn":15},{"ruleId":"109","severity":1,"message":"113","line":21,"column":11,"nodeType":"111","messageId":"112","endLine":21,"endColumn":15},{"ruleId":"109","severity":1,"message":"114","line":24,"column":11,"nodeType":"111","messageId":"112","endLine":24,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":30,"column":22,"nodeType":"117","messageId":"118","endLine":30,"endColumn":24},{"ruleId":"115","severity":1,"message":"116","line":34,"column":21,"nodeType":"117","messageId":"118","endLine":34,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":38,"column":30,"nodeType":"117","messageId":"118","endLine":38,"endColumn":32},{"ruleId":"119","severity":1,"message":"120","line":18,"column":5,"nodeType":"111","endLine":18,"endColumn":14,"suggestions":"121"},{"ruleId":"115","severity":1,"message":"116","line":22,"column":51,"nodeType":"117","messageId":"118","endLine":22,"endColumn":53},{"ruleId":"115","severity":1,"message":"116","line":25,"column":60,"nodeType":"117","messageId":"118","endLine":25,"endColumn":62},{"ruleId":"115","severity":1,"message":"116","line":95,"column":71,"nodeType":"117","messageId":"118","endLine":95,"endColumn":73},{"ruleId":"115","severity":1,"message":"116","line":96,"column":71,"nodeType":"117","messageId":"118","endLine":96,"endColumn":73},{"ruleId":"115","severity":1,"message":"116","line":97,"column":88,"nodeType":"117","messageId":"118","endLine":97,"endColumn":90},{"ruleId":"115","severity":1,"message":"116","line":17,"column":125,"nodeType":"117","messageId":"118","endLine":17,"endColumn":127},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'fish' is assigned a value but never used.","Identifier","unusedVar","'bugs' is assigned a value but never used.","'seaCreatures' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFilteredData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [filterData, props.data] as a second argument to the useEffect Hook.",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Add dependencies array: [filterData, props.data]",{"range":"127","text":"128"},[651,651],", [filterData, props.data]"]