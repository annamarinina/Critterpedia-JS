[{"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/index.js":"1","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/reportWebVitals.js":"2","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/App.js":"3","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/store.js":"4","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/fishData/dataSlice.js":"5","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/seaCreaturesData/dataSlice.js":"6","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/bugData/dataSlice.js":"7","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hourSlice.js":"8","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/monthSlice.js":"9","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hemisphereSlice.js":"10","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Header/Header.jsx":"11","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/RadioGroup.jsx":"12","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterGrid/CritterGrid.jsx":"13","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Critter/Critter.jsx":"14","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/NavButton/NavButton.jsx":"15","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/SeaCreaturePage.jsx":"16","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BasePage.jsx":"17","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BugPage.jsx":"18","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/FishPage.jsx":"19","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/SelectMenu/SelectMenu.jsx":"20"},{"size":620,"mtime":1619800983196,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1618353192831,"results":"23","hashOfConfig":"22"},{"size":1855,"mtime":1640107750061,"results":"24","hashOfConfig":"22"},{"size":640,"mtime":1619882818217,"results":"25","hashOfConfig":"22"},{"size":1012,"mtime":1640011713421,"results":"26","hashOfConfig":"22"},{"size":1075,"mtime":1620079593628,"results":"27","hashOfConfig":"22"},{"size":1007,"mtime":1620079582675,"results":"28","hashOfConfig":"22"},{"size":388,"mtime":1640018934779,"results":"29","hashOfConfig":"22"},{"size":401,"mtime":1640018327094,"results":"30","hashOfConfig":"22"},{"size":402,"mtime":1619882671804,"results":"31","hashOfConfig":"22"},{"size":204,"mtime":1640115844075,"results":"32","hashOfConfig":"22"},{"size":682,"mtime":1640109427394,"results":"33","hashOfConfig":"22"},{"size":923,"mtime":1640115400561,"results":"34","hashOfConfig":"22"},{"size":210,"mtime":1640115523883,"results":"35","hashOfConfig":"22"},{"size":330,"mtime":1640108996441,"results":"36","hashOfConfig":"22"},{"size":775,"mtime":1640109807219,"results":"37","hashOfConfig":"22"},{"size":3229,"mtime":1640116438636,"results":"38","hashOfConfig":"22"},{"size":717,"mtime":1640109797282,"results":"39","hashOfConfig":"22"},{"size":719,"mtime":1640109771446,"results":"40","hashOfConfig":"22"},{"size":685,"mtime":1640116474417,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1wdh0sb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/index.js",[],["86","87"],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/reportWebVitals.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/App.js",["88","89","90","91","92","93"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchFishData } from './app/fishData/dataSlice';\nimport { fetchBugData } from './app/bugData/dataSlice';\nimport { fetchSeaCreaturesData } from './app/seaCreaturesData/dataSlice';\nimport { Header } from './components/Header/Header';\nimport { FishPage } from './pages/FishPage';\nimport { BugPage } from './pages/BugPage';\nimport { SeaCreaturePage } from './pages/SeaCreaturePage';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n    const fish = useSelector((state) => state.fishData.fish);\n    const fishStatus = useSelector(state => state.fishData.status);\n\n    const bugs = useSelector((state) => state.bugData.bugs);\n    const bugStatus = useSelector(state => state.bugData.status);\n\n    const seaCreatures = useSelector((state) => state.seaCreaturesData.seaCreatures);\n    const seaCreaturesStatus = useSelector(state => state.seaCreaturesData.status);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      if (fishStatus == 'idle') {\n        dispatch(fetchFishData());\n      }\n\n      if (bugStatus == 'idle') {\n        dispatch(fetchBugData());\n      }\n\n      if (seaCreaturesStatus == 'idle') {\n        dispatch(fetchSeaCreaturesData());\n      }\n    }, [fishStatus, bugStatus, seaCreaturesStatus, dispatch])\n\n  return (\n    <Router>\n    <div className=\"App\">\n    <Header />\n        <Route \n          exact \n          path=\"/\" \n          render={() => {\n            return ( <Redirect to=\"/fish\" />\n            )}} />\n        <Route exact path=\"/fish\" component={FishPage} />\n        <Route exact path=\"/bugs\" component={BugPage} />\n        <Route exact path=\"/seacreatures\" component={SeaCreaturePage} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/store.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/fishData/dataSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/seaCreaturesData/dataSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/bugData/dataSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hourSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/monthSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/app/filters/hemisphereSlice.js",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Header/Header.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/RadioGroup.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/CritterGrid/CritterGrid.jsx",["94","95"],"import React, { useEffect } from 'react';\nimport './CritterGrid.css';\nimport { Critter } from '../Critter/Critter';\n\nexport const CritterGrid = (props) => {\n\n    const monthArrayHemisphere = props.hemisphere == 'Northern' ? \"month-array-northern\" : \"month-array-southern\";\n\n    const filterData = (data) => {\n        data = data.filter(f => f.availability[monthArrayHemisphere].includes(Number(props.month)));\n        data = data.filter(f => f.availability[\"time-array\"].includes(Number(props.hour)));\n        console.log('filtered data: ', data);\n        return data;\n    }\n\n    return(\n        <div class=\"gridContainer\">\n            {filterData(props.data).map(critter => \n            <div class=\"gridItem\">\n                <Critter label={critter.name[\"name-USen\"]} iconUri = {critter[\"icon_uri\"]} />\n                <span className=\"label\">{critter.name[\"name-USen\"]}</span>\n            </div>)}\n        </div>\n    )\n}","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/Critter/Critter.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/NavButton/NavButton.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/SeaCreaturePage.jsx",["96"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { BasePage } from './BasePage';\nimport { CritterGrid } from '../components/CritterGrid/CritterGrid';\n\nexport const SeaCreaturePage = () => {\n    const seaCreatures = useSelector((state) => state.seaCreaturesData.seaCreatures);\n    const hemisphere = useSelector((state) => state.hemisphere.hemisphere);\n    const month = useSelector((state) => state.month.month);\n    const hour = useSelector((state) => state.hour.hour);\n\n    useEffect(() => {\n        console.log(seaCreatures);\n    })\n\n    return (\n        <div>\n            <BasePage page={'sea'} />\n            <CritterGrid data={seaCreatures} month={month} hour={hour} hemisphere={hemisphere} />\n        </div>\n    )\n}","/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BasePage.jsx",["97","98","99"],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/BugPage.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/pages/FishPage.jsx",[],"/Users/annamarinina/Desktop/Projects/Critterpedia-JS/src/components/SelectMenu/SelectMenu.jsx",["100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":18,"column":11,"nodeType":"107","messageId":"108","endLine":18,"endColumn":15},{"ruleId":"105","severity":1,"message":"109","line":21,"column":11,"nodeType":"107","messageId":"108","endLine":21,"endColumn":15},{"ruleId":"105","severity":1,"message":"110","line":24,"column":11,"nodeType":"107","messageId":"108","endLine":24,"endColumn":23},{"ruleId":"111","severity":1,"message":"112","line":30,"column":22,"nodeType":"113","messageId":"114","endLine":30,"endColumn":24},{"ruleId":"111","severity":1,"message":"112","line":34,"column":21,"nodeType":"113","messageId":"114","endLine":34,"endColumn":23},{"ruleId":"111","severity":1,"message":"112","line":38,"column":30,"nodeType":"113","messageId":"114","endLine":38,"endColumn":32},{"ruleId":"105","severity":1,"message":"115","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":7,"column":51,"nodeType":"113","messageId":"114","endLine":7,"endColumn":53},{"ruleId":"105","severity":1,"message":"116","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":73,"column":71,"nodeType":"113","messageId":"114","endLine":73,"endColumn":73},{"ruleId":"111","severity":1,"message":"112","line":74,"column":71,"nodeType":"113","messageId":"114","endLine":74,"endColumn":73},{"ruleId":"111","severity":1,"message":"112","line":75,"column":88,"nodeType":"113","messageId":"114","endLine":75,"endColumn":90},{"ruleId":"111","severity":1,"message":"112","line":17,"column":125,"nodeType":"113","messageId":"114","endLine":17,"endColumn":127},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'fish' is assigned a value but never used.","Identifier","unusedVar","'bugs' is assigned a value but never used.","'seaCreatures' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]